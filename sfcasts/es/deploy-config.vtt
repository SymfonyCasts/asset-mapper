WEBVTT

00:00:01.056 --> 00:00:05.906 align:middle
¡Acabamos de desplegar una versión
semifuncionante de nuestro sitio en platform.sh!

00:00:06.216 --> 00:00:10.596 align:middle
Todo lo que hizo falta fue un comando para arrancar
unos cuantos archivos de configuración y otro

00:00:10.596 --> 00:00:13.816 align:middle
para crear el proyecto dentro de platform.sh.

00:00:14.436 --> 00:00:18.276 align:middle
Pero... tuvimos algunos errores
y advertencias por el camino.

00:00:19.086 --> 00:00:23.496 align:middle
En la parte superior de la salida, vemos una advertencia
sobre el uso de una versión antigua de Composer.

00:00:24.126 --> 00:00:29.016 align:middle
En un minuto, veremos cómo y por qué se
utiliza Composer durante el despliegue.

00:00:29.656 --> 00:00:34.876 align:middle
Pero cuando lo hace, por alguna razón, está
utilizando una versión antigua de Composer.

00:00:34.876 --> 00:00:38.916 align:middle
Afortunadamente, nos avisa y
nos dice cómo solucionarlo.

00:00:39.456 --> 00:00:41.126 align:middle
Copia esta línea dependencies.

00:00:41.716 --> 00:00:44.196 align:middle
A continuación, abre .platform.app.yaml.

00:00:44.716 --> 00:00:51.256 align:middle
Este es el archivo principal de despliegue: casi todos
los ajustes de despliegue que harás se harán aquí.

00:00:52.426 --> 00:00:54.986 align:middle
El proceso de despliegue consta de dos pasos.

00:00:55.376 --> 00:01:02.176 align:middle
El primero es el paso build en el que se construye
tu código: puedes considerarlo como el paso

00:01:02.176 --> 00:01:06.076 align:middle
que prepara todos los archivos
físicos que necesita tu proyecto.

00:01:06.816 --> 00:01:11.406 align:middle
Una vez finalizado el paso build, se crea
un contenedor, se introducen los archivos

00:01:11.806 --> 00:01:16.976 align:middle
y se ejecuta la segunda y última
parte del proceso: el paso deploy.

00:01:17.516 --> 00:01:19.806 align:middle
Aquí es donde puedes ejecutar
algunos comandos finales.

00:01:19.806 --> 00:01:24.776 align:middle
¿Ves estos scripts
symfony-build y symfony-deploy?

00:01:25.386 --> 00:01:30.296 align:middle
Se trata de scripts prefabricados que contienen la mayor
parte de lo que tu aplicación necesita para desplegarse.

00:01:30.296 --> 00:01:36.366 align:middle
Si los descargaras y los abrieras, verías
cosas como ejecutar composer install , calentar

00:01:36.656 --> 00:01:39.796 align:middle
la caché y ejecutar
migraciones de bases de datos.

00:01:40.286 --> 00:01:42.916 align:middle
Podemos añadir cosas personalizadas
por encima o por debajo.

00:01:42.916 --> 00:01:48.466 align:middle
La configuración tiene mounts -para directorios que
quieras mantener persistentes entre despliegues-,

00:01:48.466 --> 00:01:53.146 align:middle
extensiones de PHP, tu versión
de PHP y bastantes cosas más.

00:01:54.066 --> 00:01:56.696 align:middle
En cualquier lugar dentro,
pega la línea dependencies...

00:01:57.086 --> 00:01:58.916 align:middle
y asegúrate de que no tiene sangría.

00:01:59.656 --> 00:02:02.966 align:middle
Y ya estamos utilizando
la versión 2 de Composer.

00:02:03.786 --> 00:02:09.726 align:middle
El segundo error que tuvimos, cerca de la parte inferior,
fue, no se pudo encontrar el controlador Esto viene

00:02:09.726 --> 00:02:14.676 align:middle
de cuando el script symfony-deploy intenta
ejecutar nuestras migraciones de base de datos.

00:02:15.286 --> 00:02:17.406 align:middle
Localmente, estamos utilizando Postgres.

00:02:18.046 --> 00:02:20.206 align:middle
Puedes verlo en docker-compose.yml.

00:02:20.996 --> 00:02:24.876 align:middle
¿Ya tenemos una base de datos en Platform.sh?

00:02:25.416 --> 00:02:26.396 align:middle
La respuesta es...

00:02:26.816 --> 00:02:28.356 align:middle
en realidad sí.

00:02:29.106 --> 00:02:32.936 align:middle
Además del archivo principal de
despliegue - .platform.app.yaml -

00:02:33.286 --> 00:02:37.276 align:middle
tenemos un directorio /.platform
con algunos archivos más.

00:02:38.016 --> 00:02:40.536 align:middle
El más importante es services.yaml.

00:02:41.116 --> 00:02:46.966 align:middle
Aquí es donde definimos servicios como
bases de datos, Redis, Elasticsearch y otros.

00:02:47.486 --> 00:02:50.506 align:middle
Cuando inicializamos el proyecto,
¡se dio cuenta de que estamos

00:02:50.506 --> 00:02:53.916 align:middle
utilizando Postgres y nos
añadió una base de datos!

00:02:53.916 --> 00:02:58.066 align:middle
El error que obtenemos no es porque
no pueda encontrar la base de datos:

00:02:58.476 --> 00:03:04.666 align:middle
¡es porque a nuestra instalación de
PHP le falta el controlador PDO_PGSQL!

00:03:05.386 --> 00:03:10.026 align:middle
Y gracias a .platform.app.yaml,
añadirlo es fácil.

00:03:10.026 --> 00:03:15.876 align:middle
Busca extensions, y añade pdo_pgsql.

00:03:16.846 --> 00:03:18.836 align:middle
Vale, ¿listo para volver a desplegar?

00:03:19.586 --> 00:03:25.136 align:middle
Recuerda: el despliegue se realiza mediante un
push, así que tenemos que confirmar estos archivos.

00:03:25.626 --> 00:03:29.426 align:middle
Ejecuta git commit -m con
un mensaje inspirador.

00:03:30.456 --> 00:03:35.226 align:middle
Ahora ejecuta: symfony deploy Esto ejecuta los
mismos pasos que nuestro primer despliegue,

00:03:35.616 --> 00:03:40.266 align:middle
que ahora entendemos que incluyen un
paso build y luego un paso deploy.

00:03:41.026 --> 00:03:45.736 align:middle
Tardará uno o dos minutos, pero debería
ser un poco más rápido porque no

00:03:45.736 --> 00:03:49.416 align:middle
necesita volver a aprovisionar
el certificado SSL.

00:03:49.416 --> 00:03:50.576 align:middle
Al final...

00:03:50.986 --> 00:03:54.906 align:middle
el comando de migración sigue
fallando, pero con un error diferente:

00:03:55.346 --> 00:03:59.456 align:middle
Conexión denegada Ah, ignora eso un momento.

00:04:00.056 --> 00:04:03.206 align:middle
En lugar de eso, vuelve
al sitio y actualízalo.

00:04:04.046 --> 00:04:05.566 align:middle
La página de inicio sigue funcionando.

00:04:05.956 --> 00:04:09.576 align:middle
Pero... eso es porque nuestra página
de inicio no utiliza la base de datos.

00:04:09.576 --> 00:04:11.676 align:middle
Si pulsas "Examinar mezclas"...

00:04:11.676 --> 00:04:13.726 align:middle
¡error 500!

00:04:14.326 --> 00:04:18.826 align:middle
Ese error 500 se debe probablemente a un
problema de conexión con la base de datos.

00:04:19.226 --> 00:04:23.316 align:middle
Pero vamos a suponer que no tenemos
ni idea de cuál es la causa.

00:04:23.786 --> 00:04:24.916 align:middle
¿Cómo podríamos averiguarlo?

00:04:25.656 --> 00:04:28.596 align:middle
Aquí es donde resulta útil el
comando symfony logs . Se conecta al

00:04:29.096 --> 00:04:33.396 align:middle
"entorno" -o "servidor"- de platform. sh al que

00:04:33.586 --> 00:04:38.506 align:middle
esté conectada nuestra rama git actual
y devuelve la información del registro.

00:04:39.156 --> 00:04:43.876 align:middle
Hay un montón de opciones, pero pulsa 2
para ir al registro de la "aplicación".

00:04:44.646 --> 00:04:48.206 align:middle
Esto representa los registros de Symfony
procedentes de nuestra aplicación.

00:04:48.956 --> 00:04:50.636 align:middle
Y...

00:04:50.986 --> 00:04:53.366 align:middle
Veo varios: Conexión al servidor [..]

00:04:53.366 --> 00:04:57.166 align:middle
fallida: Conexión denegada
Reflexionemos sobre esto.

00:04:57.686 --> 00:05:03.096 align:middle
Parece que tenemos Postgres configurado,
gracias al archivo services.yaml. Pero

00:05:03.696 --> 00:05:06.586 align:middle
nunca hemos configurado nuestra aplicación
para que hable con él. Recuerda que

00:05:07.326 --> 00:05:15.326 align:middle
en .env, tenemos una variable de entorno DATABASE_URL
que se supone que apunta a nuestra base de datos.

00:05:15.986 --> 00:05:21.146 align:middle
Nunca configuramos eso en nuestro sitio de producción, así
que simplemente está utilizando este valor por defecto. Y

00:05:21.906 --> 00:05:24.666 align:middle
no es de extrañar que no funcione. ¿Cómo

00:05:25.316 --> 00:05:29.016 align:middle
podemos configurar DATABASE_URL
para que apunte a... dondequiera que

00:05:29.356 --> 00:05:31.876 align:middle
esté este servidor de base de datos? La

00:05:32.456 --> 00:05:33.436 align:middle
respuesta es... nosotros...

00:05:33.616 --> 00:05:34.596 align:middle
¿no?

00:05:35.046 --> 00:05:37.236 align:middle
Y es bastante guay. Platform. sh

00:05:37.236 --> 00:05:42.386 align:middle
tiene esta idea de las relaciones.

00:05:42.386 --> 00:05:45.926 align:middle
Tienes una serie de servicios
en services.yaml. Pero

00:05:46.526 --> 00:05:51.786 align:middle
tu aplicación no puede hablar con ellos hasta que
los vincules mediante lo que se llama una "relación".

00:05:51.786 --> 00:05:52.646 align:middle
Busca

00:05:52.646 --> 00:05:56.336 align:middle
"relaciones" en.platform.app.yaml.

00:05:57.176 --> 00:05:59.386 align:middle
Todavía no está aquí, así que
vamos a añadirla. Cada "relación"

00:06:00.076 --> 00:06:03.036 align:middle
tiene un nombre interno.

00:06:03.756 --> 00:06:08.906 align:middle
Técnicamente podría ser cualquier cosa, pero,
en la práctica, deberías utilizar database.

00:06:09.386 --> 00:06:12.306 align:middle
Veremos el significado de esto
dentro de un momento. Ajústalo

00:06:12.306 --> 00:06:18.636 align:middle
a la palabra database, porque ésa es la
clave que tenemos aquí, y luego : seguido

00:06:18.636 --> 00:06:23.196 align:middle
del tipo de servicio, que es postgresql. Esta

00:06:23.946 --> 00:06:27.326 align:middle
sintaxis siempre me ha parecido rara. Lo

00:06:27.326 --> 00:06:33.566 align:middle
importante es que la clave podría ser cualquier cosa,
como banana, pero este database hace referencia a

00:06:33.566 --> 00:06:40.686 align:middle
este database en services.yaml, y postgresql
hace referencia a este postgresql. Pero

00:06:40.686 --> 00:06:46.446 align:middle
aunque la primera clave database podría ser cualquier
cosa, he utilizado database a propósito. Symfony

00:06:46.446 --> 00:06:51.246 align:middle
hace una cosa muy buena cuando
despliega a través de Platform.sh.

00:06:51.686 --> 00:06:56.256 align:middle
Ve esta relación, se da cuenta de
que es para una base de datos, ¡y

00:06:56.256 --> 00:07:01.526 align:middle
expone automáticamente una variable de entorno
que contiene la información de conexión a

00:07:01.626 --> 00:07:03.366 align:middle
esa base de datos! ¿Cómo

00:07:04.146 --> 00:07:06.596 align:middle
se llama esta variable de entorno? Como

00:07:06.596 --> 00:07:13.066 align:middle
hemos utilizado la clave "base de
datos", se llamará DATABASE_URL. En

00:07:13.716 --> 00:07:17.726 align:middle
otras palabras, va a establecer esta
variable de entorno por nosotros. ¡Voy a

00:07:18.336 --> 00:07:18.976 align:middle
probarlo! Una

00:07:19.606 --> 00:07:24.896 align:middle
de las cosas que más me gustan de Platform.sh es que
puedes conectarte por SSH a tu contenedor. Observa:

00:07:25.556 --> 00:07:29.826 align:middle
symfony ssh Allá vamos. Una vez

00:07:30.416 --> 00:07:37.376 align:middle
aquí, si quieres ver todas las variables
de entorno, ejecuta: printenv ¡Mira! No

00:07:37.986 --> 00:07:41.046 align:middle
verás nada que empiece
por "base de datos", pero

00:07:41.506 --> 00:07:44.676 align:middle
deberíamos después de desplegar
este próximo cambio. Escribe

00:07:45.456 --> 00:07:51.686 align:middle
exit , ejecuta git status y luego git
add -p ¡Eso es lo que queremos! Confirma

00:07:52.296 --> 00:07:55.336 align:middle
con git commit -m "adding database relation" Y

00:07:56.116 --> 00:08:02.386 align:middle
symfony deploy Esta vez, se despliega
mucho más rápido. Como no hemos

00:08:03.046 --> 00:08:08.446 align:middle
cambiado ningún código de la aplicación, platform.sh
ha sido lo suficientemente inteligente como para

00:08:08.446 --> 00:08:13.166 align:middle
utilizar el código de nuestra antigua aplicación, en lugar
de volver a hacer toda esa construcción. Podemos verlo

00:08:13.926 --> 00:08:20.346 align:middle
: Reutilizando la compilación existente
para este ID de árbol ¡Y oye! ¡ Esta

00:08:20.686 --> 00:08:24.016 align:middle
vez, vemos que Successfully migrated! ¡Sí!

00:08:24.516 --> 00:08:27.936 align:middle
ejecutó nuestra migración
sin problemas. Cuando

00:08:28.556 --> 00:08:30.186 align:middle
giramos y comprobamos el sitio...

00:08:31.656 --> 00:08:35.436 align:middle
funciona. Aún le faltan todos
nuestros estilos ... pero

00:08:35.526 --> 00:08:36.906 align:middle
eso lo arreglaremos a continuación. Lo

00:08:37.356 --> 00:08:40.166 align:middle
importante es que la base de datos funciona.

00:08:40.986 --> 00:08:48.656 align:middle
Puedes ver la diferencia que ha supuesto si
ejecutas symfony ssh y printenv Esta vez,

00:08:48.746 --> 00:08:56.366 align:middle
hay varias variables DATABASE_, incluida
la más importante DATABASE_URL. Vale,

00:08:57.186 --> 00:09:01.536 align:middle
la última pieza que le falta a
nuestro sitio desplegado es... ¡todos

00:09:01.906 --> 00:09:04.276 align:middle
sus activos!

00:09:04.276 --> 00:09:07.946 align:middle
Veamos ahora qué se necesita para
desplegar un sitio AssetMapper.
